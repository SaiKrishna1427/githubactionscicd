name: Build and Deploy to AWS EC2

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the Code
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Cache Maven Dependencies
      - name: Set up Cache for Maven
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      # Step 3: Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      # Step 4: Build the Project
      - name: Build Maven Project
        run: mvn clean package --file pom.xml

      # Step 5: Upload Artifact (optional for reuse)
      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v3
        with:
          name: my-jar
          path: target/*.jar

      # Step : To Download Artifact
      - name: Download JAR Artifact
        uses: actions/download-artifact@v3
        with:
          name: my-jar
          path: ./downloaded-jar

      - name: List Downloaded Files
        run: ls -l ./downloaded-jar

      # Step : To avoid Verification errors
      - name: Add SSH Host Key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
      # Step 6: Transfer JAR to AWS EC2
      - name: Deploy JAR to AWS EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_KEY: ${{ secrets.EC2_KEY }}
          TARGET_PATH: /root/u003/
        run: |
          # Save the private key from secrets
          echo "$EC2_KEY" > ec2_key.pem
          chmod 600 ec2_key.pem
          # Copy the JAR file to the EC2 instance
          scp -v -i ec2_key.pem target/*.jar root@$EC2_HOST:$TARGET_PATH
   
          
